---
title: "Distribución Gamma"
lang: es
---

```{=html}
<style>
main.content {
text-align: justify}
</style>
```

```{r}
#| label: setup
#| include: false

library(ggplot2)
library(dplyr)
library(gridExtra)
library(knitr)
library(kableExtra)
library(RColorBrewer)
library(plotly)

```

## Ejercicios Propuestos

::: {#exr-TCL_gamma}
### Simulación y Teorema Central del Límite

-   Genera 1000 muestras de tamaños $n= 5, 10, 20, 30, 50, 100$ de una distribución $\text{gamma}(\alpha = 2.5, \lambda = 1.8)$.
-   Calcula la media muestral para cada muestra y compárala con la media teórica.
-   Calcula la varianza de las medias muestrales y compárala con la varianza teórica dividida por $n$.
-   Grafica los histogramas de las medias muestrales y superpone la distribución normal teórica según el TCL.
:::

```{r}
#| warning: false
#| message: false

# Parámetros de la distribución gamma
alpha_tcl <- 2.5
lambda_tcl <- 1.8
media_teorica_tcl <- alpha_tcl / lambda_tcl
varianza_teorica_tcl <- alpha_tcl / lambda_tcl^2
tamaños_muestra_tcl <- c(5, 10, 20, 30, 50, 100)
set.seed(123)  
resultados_tcl <- data.frame()
for (n in tamaños_muestra_tcl) {
  medias_muestrales <- replicate(1000, mean(rgamma(n, shape = alpha_tcl, rate = lambda_tcl)))
  varianza_muestral <- var(medias_muestrales)
  resultados_tcl <- rbind(resultados_tcl, data.frame(
    n = n,
    media_muestral = mean(medias_muestrales),
    varianza_muestral = varianza_muestral,
    varianza_teorica_div_n = varianza_teorica_tcl / n
  ))
  
# Graficar histograma con densidad normal teórica
  ggplot(data.frame(x = medias_muestrales), aes(x = x)) +
    geom_histogram(aes(y = after_stat(density)), bins = 30, 
                   fill = "green", color = "black", alpha = 0.7) +
    stat_function(fun = dnorm, args = list(mean = media_teorica_tcl, 
                                           sd = sqrt(varianza_teorica_tcl / n)),
                  color = "#018", linewidth = 1.5) +
    labs(title = paste("Histograma de Medias Muestrales (n =", n, ")"),
         subtitle = "Distribución Gamma(2.5, 1.8)",
         x = "Media Muestral",
         y = "Densidad",
         caption = "Curva azul: Distribución normal teórica según TCL") +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5),
          plot.subtitle = element_text(hjust = 0.5)) +
    xlim(media_teorica_tcl - 1, media_teorica_tcl + 1) +
    ylim(0, 1)
} 
# Mostrar tabla de resultados
kable(resultados_tcl,
      caption = "Comparación de medias y varianzas muestrales con valores teóricos",
      digits = 4,
      col.names = c("n", "Media Muestral", "Varianza Muestral", "Varianza Teórica / n")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
  
```



::: {#exr-suma_exponenciales}
**Proposición** Sean $X_1, \dots, X_n$ variables aleatorias independientes e idénticamente distribuidas con distribución exponencial $\text{exp}(\lambda)$. Entonces, la suma $Y = \sum_{i=1}^{n} X_i$ sigue una distribución gamma $\text{gamma}(n, \lambda)$.

-   Simula 1000 sumas de $n=5$ variables aleatorias $\text{exp}(\lambda = 1.5)$.
-   Grafica el histograma de las sumas y superpone la densidad teórica de $\text{gamma}(5, 1.5)$.
-   Repite el ejercicio para $n=10$ y $n=20$ y observa cómo cambia la forma de la distribución.
:::



```{r}
#| warning: false
#| message: false

# Parámetro de la distribución exponencial
lambda_exp <- 1.5
n_valores <- c(5, 10, 20)
set.seed(456)
for (n in n_valores) {
  sumas_exponenciales <- replicate(1000, sum(rexp(n, rate = lambda_exp)))
  ggplot(data.frame(x = sumas_exponenciales), aes(x = x)) +
    geom_histogram(aes(y = after_stat(density)), bins = 30, 
                   fill = "red", color = "black", alpha = 0.7) +
    stat_function(fun = dgamma, args = list(shape = n, rate = lambda_exp),
                  color = "yellow", linewidth = 1.5) +
    labs(title = paste("Histograma de Sumas de Exponenciales (n =", n, ")"),
         subtitle = "Variables Exponenciales(λ = 1.5)",
         x = "Suma de Variables",
         y = "Densidad",
         caption = "Curva azul: Densidad teórica de Gamma(n, λ)") +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5),
          plot.subtitle = element_text(hjust = 0.5)) +
    xlim(0, n * 3) +
    ylim(0, 0.5)
}
```

